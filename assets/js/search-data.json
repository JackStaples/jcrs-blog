{
  
    
        "post0": {
            "title": "Title",
            "content": "import pandas as pd from bokeh.plotting import figure, show from bokeh.transform import jitter from bokeh.models import ColumnDataSource, Select, CustomJS from bokeh.palettes import Colorblind from bokeh.layouts import layout, column, row import numpy as np import matplotlib.pyplot as plt import seaborn as sb from sklearn.cluster import KMeans from sklearn import metrics from sklearn.datasets import make_blobs from datetime import datetime sb.set_theme(style=&quot;whitegrid&quot;) sb.set(rc={&#39;figure.figsize&#39;:(14,8.27)}) . players_df = pd.read_csv(r&quot;C: Users jacks Development Python jcrs-blog _notebooks person.csv&quot;) nhl_stats_df = pd.read_csv(r&quot;C: Users jacks Development Python jcrs-blog _notebooks playerStats.csv&quot;) nhl_stats_df = nhl_stats_df[(nhl_stats_df[&#39;league_id&#39;] == 133) &amp; (nhl_stats_df[&#39;games&#39;] &gt; 9)] nhl_stats_df = nhl_stats_df.groupby([&#39;person_id&#39;, &#39;year&#39;]).max().reset_index().sort_values(by=[&#39;person_id&#39;,&#39;year&#39;]) nhl_stats_df[&#39;years_in_nhl&#39;] = nhl_stats_df.groupby(&#39;person_id&#39;).cumcount()+1 stats = pd.merge(left=players_df, right=nhl_stats_df, on=&#39;person_id&#39;) years = sorted(stats[&#39;years_in_nhl&#39;].unique()) . stats[&#39;points&#39;] = stats[&#39;goals&#39;] + stats[&#39;assists&#39;] rename_map = { &#39;power_play_goals&#39;: &#39;power play goals&#39;, &#39;power_play_assists&#39;: &#39;power play assists&#39;, &#39;game_winning_goals&#39;: &#39;game winning goals&#39;, &#39;short_handed_goals&#39;: &#39;short handed goals&#39;, &#39;short_handed_assists&#39;: &#39;short handed assists&#39;, &#39;blocked_shots&#39;: &#39;blocked shots&#39;, &#39;plus_minus&#39;: &#39;plus minus&#39;, } stats = stats.rename(columns=rename_map) stats[&#39;power play points&#39;] = stats[&#39;power play goals&#39;] + stats[&#39;power play assists&#39;] stats[&#39;short handed points&#39;] = stats[&#39;short handed goals&#39;] + stats[&#39;short handed assists&#39;] x_axis_values = [ &#39;goals&#39;, &#39;power play goals&#39;, &#39;short handed goals&#39;, &#39;game winning goals&#39;, &#39;assists&#39;, &#39;power play assists&#39;, &#39;short handed assists&#39;, &#39;points&#39;, &#39;power play points&#39;, &#39;short handed points&#39;, &#39;shots&#39;, &#39;hits&#39;, &#39;pim&#39;, &#39;blocked shots&#39;, &#39;plus minus&#39;, &#39;shifts&#39;, &#39;games&#39;, &#39;weight&#39; ] . box_sources = {} scatter_sources = {} for x_axis_value in x_axis_values: df = stats[[x_axis_value, &#39;years_in_nhl&#39;]].rename(columns={x_axis_value: &#39;field&#39;}) scatter_sources[x_axis_value] = ColumnDataSource(df) group_df = df.groupby(&#39;years_in_nhl&#39;) quantiles_df = pd.DataFrame() quantiles_df[&#39;floor&#39;] = group_df.quantile(0) quantiles_df[&#39;q1&#39;] = group_df.quantile(0.25) quantiles_df[&#39;q2&#39;] = group_df.quantile(0.5) quantiles_df[&#39;q3&#39;] = group_df.quantile(0.75) quantiles_df[&#39;roof&#39;] = group_df.quantile(1) source_dict = { &#39;floor&#39;: group_df.quantile(0), &#39;q1&#39;: group_df.quantile(0.25), &#39;q2&#39;: group_df.quantile(0.5), &#39;q3&#39;:group_df.quantile(0.75), &#39;roof&#39;: group_df.quantile(1) } box_sources[x_axis_value] = ColumnDataSource(quantiles_df) initial_selection = &#39;goals&#39; initial_df = stats[[initial_selection, &#39;years_in_nhl&#39;]] scatter_source = scatter_sources[initial_selection] box_source = box_sources[initial_selection] . x_select = Select(options=x_axis_values, width=420, height=30) x_select.js_on_change(&quot;value&quot;, CustomJS(args= dict( scatter_source=scatter_source, scatter_sources=scatter_sources, box_source=box_source, box_sources=box_sources ), code=&quot;&quot;&quot; const new_scatter = scatter_sources[this.value].data scatter_source.data = new_scatter; scatter_source.change.emit(); const new_box = box_sources[this.value].data box_source.data = new_box; box_source.change.emit(); &quot;&quot;&quot;)) p = figure(width=900, height=300) p.xaxis.ticker = years p.xaxis.axis_label = &quot;Years in the NHL&quot; p.scatter(x=jitter(&#39;years_in_nhl&#39;, 0.55), y=&#39;field&#39;, size=5, alpha=0.05, source=scatter_source, color=Colorblind[8][0]) line_width = 0.9 boxplot_color = Colorblind[8][7] p.rect(&#39;years_in_nhl&#39;, &#39;q1&#39;, source=box_source, color=boxplot_color, width=line_width, height=0.2) p.rect(&#39;years_in_nhl&#39;, &#39;q2&#39;, source=box_source, color=boxplot_color, width=line_width, height=0.2) p.rect(&#39;years_in_nhl&#39;, &#39;q3&#39;, source=box_source, color=boxplot_color, width=line_width, height=0.2) p.vbar(source=box_source, x=&#39;years_in_nhl&#39;,top=&#39;q3&#39;, bottom=&#39;q1&#39;, line_alpha=0.5, fill_alpha=0, width=0.75, line_color=boxplot_color) p.segment(x0=&#39;years_in_nhl&#39;, y0=&#39;q3&#39;, x1=&#39;years_in_nhl&#39;, y1=&#39;roof&#39;, source=box_source, color=boxplot_color, width=0.75) p.segment(x0=&#39;years_in_nhl&#39;, y0=&#39;floor&#39;, x1=&#39;years_in_nhl&#39;, y1=&#39;q1&#39;, source=box_source, color=boxplot_color, width=0.75) show(layout(column(x_select, p))) . plt.figure(figsize=(12, 12)) kmeans = KMeans(n_clusters=10) y_pred = kmeans.fit_predict(X) . &lt;Figure size 864x864 with 0 Axes&gt; . plt.scatter(X[&#39;assists&#39;], X[&#39;goals&#39;], c=y_pred) . &lt;matplotlib.collections.PathCollection at 0x1b3d2d23eb0&gt; . from bokeh.layouts import column from bokeh.plotting import figure, show from bokeh.sampledata.autompg import autompg from bokeh.transform import jitter years = sorted(autompg.yr.unique()) p1 = figure(width=600, height=300, title=&quot;Years vs mpg without jittering&quot;) p1.xgrid.grid_line_color = None p1.xaxis.ticker = years p1.scatter(x=&#39;yr&#39;, y=&#39;mpg&#39;, size=9, alpha=0.4, source=autompg) p2 = figure(width=600, height=300, title=&quot;Years vs mpg with jittering&quot;) p2.xgrid.grid_line_color = None p2.xaxis.ticker = years p2.scatter(x=jitter(&#39;yr&#39;, 0.4), y=&#39;mpg&#39;, size=9, alpha=0.4, source=autompg) type(years[0]) . numpy.int64 .",
            "url": "https://jackstaples.github.io/jcrs-blog/2021/11/13/Untitled.html",
            "relUrl": "/2021/11/13/Untitled.html",
            "date": " • Nov 13, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Birth Month Bias in the NHL",
            "content": "The ten thousand hour rule, popularized in Malcolm Gladwell&#39;s book Outliers, has become something of a mantra for a subculture of &quot;rise and grinders&quot; who strive to put in the time required to achieve mastery in their given vocations. While working hard to achieve excellence is certainly a worthy goal, an element of the concept is lost in the kind of &quot;modern myth&quot; which that rule has become. When Gladwell writes about the ten thousand hour rule, he is points out that for many people who achieve mastery in a field, there is an element of luck that allows them to put in far more time than many others. One example that he gives is the effect the birth month of a hockey player has on their chances of becoming a professional. That is, players born in the earlier months of the year seem to make it to the National Hockey League (NHL) in larger numbers than players born in the later months of the year. This post will examine if that rule still holds in todays NHL, and will go further to explore how birth month affects the careers of the players who do make it the NHL. . The chapter of Outliers that dives into this is based on a 1985 paper published by a group of Canadian phsycologists (R.H. Barnsley, A.H. Thompson, and P.E. Barnsley) titled &#39;Hockey Success and Birthdate: The Relative Age Effect&#39;. It gives their findings that almost twice as many players making it to the NHL are born in the months of January, February, and March compared to the months of October, November, and December. The study found that if you divided the year into half, players born in the first half of the year represented a total of 61.8% of the player pool compared to 38.2% for the second half. They also found similar numbers in the junior system when examining the Western Hockey League and the Ontario Hockey League. Its suggested in the paper that this is the result of something called the Relative Age Effect, the ugly result of age grouping. In Canada, the cutoff date for minor hockey is December 31st of each year. This means a player born in January will be almost a full year older than a player born in December, but both will play on the same team. This gives the January born players a significant advantage, as older children will likely be stronger, faster, and more mentally developed than their opponents. In a competitive game like hockey this can provide a huge boost for players at an early stage of their development, and those players then become far more likely to be given the opportunities required to advance ahead of their peers and ultimately &quot;make it&quot; as a professional athelete. . Before diving into the data I think it&#39;s important to mention the restrictions I&#39;ve placed on the dataset that the below visualizations are built on: . All the data is pulled from the NHL&#39;s open API | No data from the current season is included in the dataset | Only players who have played more than 9 games in one season are included in the dataset | Goaltenders are removed from the dataset, as their statistics don&#39;t compare with other positions | Only players who played after the NHL lockout (2005) are included. For the purposes of this post I&#39;m considering that the &quot;modern era&quot; of the NHL. | So with that said here is how the data breaks out into the 4 categories: Early (born in January, February, March), Early-Middle (born in April, May, June), Middle-Late (born in July, August, September) and Late (born in October, November, and December). . There are 684 (30.3%) players born in the &#39;Early&#39; grouping months, while there are only 459 (20.3) players born in the &#39;Late&#39; grouping. That is close to the 32.9% to 16.2% found by Barnsley et al. in 1985. It means that for every 10 players born in the months of October, November, or December who make the NHL there are roughly 15 born in the months of January, February, or March. This is just a visualization and it&#39;s not attempting to prove statistically significance, but those numbers certainly suggest a pronounced correlation. . Given that the birth month trend certainly looks to be holding in today&#39;s NHL, let&#39;s explore a little deeper. Below is a boxplot without outliers (https://en.wikipedia.org/wiki/Box_plot). It visualizes the different percentiles players from each grouping fall into. Take the time to filter between the different stats available and see the trends, and checkout how this changes when you set it to show the stats on a per game basis rather than career totals. . &lt;!DOCTYPE html&gt; Bokeh Plot . . Its interesting data, and looking at the shape of it here&#39;s what I notice . Players from the later months seem to perform better in skill metrics both in career totals and on a per game basis. They look to be scoring more goals, recording more assists, and taking more shots than those players born in earlier months. | The Early-Middle category is weird. The median players in this category are scoring almost 10 points less than the media Early players when looking at career totals. On a per game basis however they are scoring more than the Early category. Is it possible the spring months tend to turn out more injury prone players? There&#39;s more to look into here. | The Early category plays to their size advantage. They&#39;re throwing more hits, and recording more penalty minutes than the other categories. | This is just a visualization of the data, it&#39;s not trying to prove anything. It&#39;s job is to suggest trends in the data that could lead to more certainty. But with that said, it&#39;s time to draw some very loosely founded conclusions about what&#39;s being seen here. . It&#39;s tempting to look at this and think that players born in the later months really are more skilled than those born in the earlier months; that they are traversing a road that places them at a disadvantage, and being rewarded with a more fruitful career. Personally, I think that is only part of what we&#39;re seeing here. Hockey is not just a skill game, good teams require players who can kill penalties, land big hits, and shutdown opposing scorers. In those roles there is a big advantage to being big (no pun intended). What is likely happening is that those roles are generally given to players born in the earlier months of the year, since as they are coming up through their minor hockey careers they are the players on the team who will tend to be bigger. They learn what it takes to play those roles, and when it comes time to compete for them at a NHL level they are the ones who have had the opportunity to get their 10,000 hours of heavy hockey in. . So what&#39;s next in exploring this data? I think there is work to be done breaking the data up by position and nationality. Different countries have different cutoff dates, and it would be interesting to see if the effect is repeatable in different countries based on when those occur. Breaking the data down by position might show certain positions are more size dependant, and are likely filled by players born in the earlier months of the year. Perhaps defencemen&#39;s birthdates skew harder to the start of the year? Likely, Using some simple rules to classify players by the role they are most likely to play for a team and seeing how birth date correlates would lead somewhere interesting. . For now, it certainly looks like the relative age effect is alive and well in the modern NHL. .",
            "url": "https://jackstaples.github.io/jcrs-blog/2021/11/04/nhldatatest.html",
            "relUrl": "/2021/11/04/nhldatatest.html",
            "date": " • Nov 4, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://jackstaples.github.io/jcrs-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jackstaples.github.io/jcrs-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}